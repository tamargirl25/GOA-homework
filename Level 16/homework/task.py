#0
#append(x): სიის ბოლოს ამატებს ელემენტს x.
#არგუმენტი: იღებს მხოლოდ ერთ არგუმენტს (x), რომელიც შეიძლება იყოს ნებისმიერი ტიპის.

#insert(i, x): ამატებს ელემენტს x კონკრეტულ პოზიციაზე i სიის შიგნით.
#არგუმენტები: იღებს ორ არგუმენტს - i (ინდექსი) და x (დასამატებელი მნიშვნელობა).

#pop(i): შლის და აბრუნებს ელემენტს კონკრეტულ პოზიციაზე i. თუ არგუმენტი არ გადაეცა, შლის ბოლო ელემენტს.
#არგუმენტები: არჩევითი ერთი არგუმენტი - i (ინდექსი).

#len(s): აბრუნებს სიის ან სტრინგის ელემენტების რაოდენობას.
#არგუმენტები: იღებს ერთ არგუმენტს s (სია ან სტრინგი).

#upper: სტრინგის ყველა სიმბოლოს აქცევს დიდ ასოებად.
#არგუმენტები: არგუმენტი არ აქვს.

#lower: სტრინგის ყველა სიმბოლოს აქცევს პატარა ასოებად.
#არგუმენტები: არგუმენტი არ აქვს.

#capitalize: სტრინგის პირველ ასოს აქცევს დიდ ასოდ, ხოლო დანარჩენებს - პატარა ასოებად.
#არგუმენტები: არგუმენტი არ აქვს.

#find(sub): აბრუნებს არჩეული ქვესტრინგის sub პირველ პოზიციას სტრინგში. თუ არ მოიძებნა, აბრუნებს -1-ს.
#არგუმენტები: იღებს ერთ არგუმენტს sub (ქვესტრინგი).

#1
surnames = ["ნანუაშვილი", "მაღალაშვილი", "ჩხიკვაძე", "თევდორაშვილი", "გოგოლაძე"]
user_name = input("შეიყვანეთ თქვენი სახელი: ")
if len(user_name) > 7:
    surnames.append(user_name)
print(surnames)

#2
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
even_index_elements = [numbers[i] for i in range(len(numbers)) if i % 2 == 0]
print(even_index_elements)

#3
text = "სტრინგის მაგალითი"
print(len(text))

#4
name = input("შეიყვანეთ თქვენი სახელი დიდი ასოებით: ").lower()
print(name)

#5
surname = "nanuashvili"
surname_upper = surname.upper()
print(surname_upper)

#6
text = "hello"
capitalized_text = text.capitalize()
print(capitalized_text)
